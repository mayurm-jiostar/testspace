name: YAML Validation and Key Path Extraction

on:
  pull_request:
    paths:
      - '**/*.yaml'
      - '**/*.yml'

jobs:
  validate-and-extract:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install pyyaml

    - name: Validate YAML and extract keys
      id: validate_and_extract
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.ya?ml$' || true)
        COMMENT=""
        if [ -z "$CHANGED_FILES" ]; then
          echo "No changed YAML files."
        else
          for FILE in $CHANGED_FILES; do
            echo "Processing $FILE"
            # Validate YAML
            python -c "import yaml, sys; yaml.safe_load(open('$FILE'))" || { echo "YAML validation failed for $FILE"; exit 1; }
            # Extract modified or added lines (not just keys)
            KEYS=$(git diff ${{ github.event.before }} ${{ github.sha }} -- $FILE | grep -E '^\+[^+]' | sed 's/^+//' | awk -F: '{print $1}')
            if [ -n "$KEYS" ]; then
              echo "Keys found in $FILE:"
              COMMENT+="**$FILE**:\n"
              for KEY in $KEYS; do
                COMMENT+="- $KEY\n"
              done
            fi
          done
        fi
        echo "comment=$COMMENT" >> $GITHUB_OUTPUT

    - name: Post comment to PR
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const comment = process.env.comment || process.env.INPUT_COMMENT || (core.getInput('comment') || '');
          if (comment && comment.trim()) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Modified or Added Keys:\n${comment}`
            });
          }
